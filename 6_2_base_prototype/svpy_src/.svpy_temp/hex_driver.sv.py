import svpy
from svpy import *
svpy.writefile = open("../lab6_2_provided/design_source/hex_driver.sv", 'w')
import svmath
import utils
from svmath import *
svwrite("\n")
dump_queue()
svwrite("module hex_driver (\n")
dump_queue()
svwrite("    input   logic           clk,\n")
dump_queue()
svwrite("    input   logic           reset,\n")
dump_queue()
svwrite("\n")
dump_queue()
svwrite("    input   logic   [3:0]   in[4],\n")
dump_queue()
svwrite("\n")
dump_queue()
svwrite("    output  logic   [7:0]   hex_seg,\n")
dump_queue()
svwrite("    output  logic   [3:0]   hex_grid\n")
dump_queue()
svwrite(");\n")
dump_queue()
svwrite("    \n")
dump_queue()
svwrite("    module nibble_to_hex(\n")
dump_queue()
svwrite("        input   logic   [3:0]   nibble,\n")
dump_queue()
svwrite("        output  logic   [7:0]   hex\n")
dump_queue()
svwrite("    );\n")
dump_queue()
begin_comb()
svwrite("        case(nibble)\n")
dump_queue()
svwrite("            4'b0000 : hex = 8'b00111111; // '0'\n")
dump_queue()
svwrite("            4'b0001 : hex = 8'b00000110; // '1'\n")
dump_queue()
svwrite("            4'b0010 : hex = 8'b01011011; // '2'\n")
dump_queue()
svwrite("            4'b0011 : hex = 8'b01001111; // '3'\n")
dump_queue()
svwrite("            4'b0100 : hex = 8'b01100110; // '4'\n")
dump_queue()
svwrite("            4'b0101 : hex = 8'b01101101; // '5'\n")
dump_queue()
svwrite("            4'b0110 : hex = 8'b01111101; // '6'\n")
dump_queue()
svwrite("            4'b0111 : hex = 8'b00000111; // '7'\n")
dump_queue()
svwrite("            4'b1000 : hex = 8'b01111111; // '8'\n")
dump_queue()
svwrite("            4'b1001 : hex = 8'b01101111; // '9'\n")
dump_queue()
svwrite("            4'b1010 : hex = 8'b01110111; // 'A'\n")
dump_queue()
svwrite("            4'b1011 : hex = 8'b01111100; // 'b'\n")
dump_queue()
svwrite("            4'b1100 : hex = 8'b00111001; // 'C'\n")
dump_queue()
svwrite("            4'b1101 : hex = 8'b01011110; // 'd'\n")
dump_queue()
svwrite("            4'b1110 : hex = 8'b01111001; // 'E'\n")
dump_queue()
svwrite("            4'b1111 : hex = 8'b01110001; // 'F'\n")
dump_queue()
svwrite("        endcase\n")
dump_queue()
svwrite("        end\n")
dump_queue()
svwrite("    endmodule\n")
dump_queue()
svwrite("\n")
dump_queue()
svwrite("    logic [7:0] hex [4];\n")
dump_queue()
svwrite("\n")
dump_queue()
svwrite("    genvar i;\n")
dump_queue()
svwrite("    generate\n")
dump_queue()
svwrite("        for(i = 0; i < 4; i++) begin\n")
dump_queue()
svwrite("            nibble_to_hex nibble_to_hex_(\n")
dump_queue()
svwrite("                .nibble(in[i]),\n")
dump_queue()
svwrite("                .hex(hex[i])\n")
dump_queue()
svwrite("            );\n")
dump_queue()
svwrite("        end\n")
dump_queue()
svwrite("    endgenerate\n")
dump_queue()
svwrite("\n")
dump_queue()
svwrite("    logic [16:0] counter;\n")
dump_queue()
svwrite("\n")
dump_queue()
svwrite("    always_ff @( posedge clk ) begin\n")
dump_queue()
svwrite("        if (reset) begin\n")
dump_queue()
svwrite("            counter <= '0;\n")
dump_queue()
svwrite("        end else begin\n")
dump_queue()
svwrite("            counter <= counter + 1;\n")
dump_queue()
svwrite("        end\n")
dump_queue()
svwrite("    end\n")
dump_queue()
svwrite("\n")
dump_queue()
begin_comb()
svwrite("        if (reset) begin\n")
dump_queue()
svwrite("            hex_grid = '1;\n")
dump_queue()
svwrite("            hex_seg = '1;\n")
dump_queue()
svwrite("        end else begin\n")
dump_queue()
svwrite("            case (counter [16:15])\n")
dump_queue()
svwrite("            2'b00: begin\n")
dump_queue()
svwrite("                hex_seg = ~hex[0];\n")
dump_queue()
svwrite("                hex_grid = 4'b1110;\n")
dump_queue()
svwrite("            end\n")
dump_queue()
svwrite("            2'b01: begin\n")
dump_queue()
svwrite("                hex_seg = ~hex[1];\n")
dump_queue()
svwrite("                hex_grid = 4'b1101;\n")
dump_queue()
svwrite("            end\n")
dump_queue()
svwrite("            2'b10: begin\n")
dump_queue()
svwrite("                hex_seg = ~hex[2];\n")
dump_queue()
svwrite("                hex_grid = 4'b1011;\n")
dump_queue()
svwrite("            end\n")
dump_queue()
svwrite("            2'b11: begin\n")
dump_queue()
svwrite("                hex_seg = ~hex[3];\n")
dump_queue()
svwrite("                hex_grid = 4'b0111;\n")
dump_queue()
svwrite("            end\n")
dump_queue()
svwrite("            endcase\n")
dump_queue()
svwrite("        end\n")
dump_queue()
end_comb()
svwrite("\n")
dump_queue()
svwrite("endmodule")
dump_queue()
svpy.writefile.close()