import svpy
from svpy import *
svpy.writefile = open("../lab6_2_provided/design_source/collision_test.sv", 'w')
import svmath
import utils
svwrite("`timescale 1ns / 1ps\n")
dump_queue()
svwrite("//////////////////////////////////////////////////////////////////////////////////\n")
dump_queue()
svwrite("// Company: \n")
dump_queue()
svwrite("// Engineer: \n")
dump_queue()
svwrite("// \n")
dump_queue()
svwrite("// Create Date: 11/21/2024 03:45:50 PM\n")
dump_queue()
svwrite("// Design Name: \n")
dump_queue()
svwrite("// Module Name: collision_test\n")
dump_queue()
svwrite("// Project Name: \n")
dump_queue()
svwrite("// Target Devices: \n")
dump_queue()
svwrite("// Tool Versions: \n")
dump_queue()
svwrite("// Description: \n")
dump_queue()
svwrite("// \n")
dump_queue()
svwrite("// Dependencies: \n")
dump_queue()
svwrite("// \n")
dump_queue()
svwrite("// Revision:\n")
dump_queue()
svwrite("// Revision 0.01 - File Created\n")
dump_queue()
svwrite("// Additional Comments:\n")
dump_queue()
svwrite("// \n")
dump_queue()
svwrite("//////////////////////////////////////////////////////////////////////////////////\n")
dump_queue()
svwrite("\n")
dump_queue()
from svmath import *
svwrite("\n")
dump_queue()
widthA = Fixed(8, 0, "widthA")
heightA = Fixed(8, 0, "heightA")
posA = Vec2(7, 25, "posA")
velA = Vec2(6, 26, "velA")
uA = Vec2(2, 14, "uA")
vA = Vec2(2, 14, "vA")

widthB = Fixed(8, 0, "widthB")
heightB = Fixed(8, 0, "heightB")
posB = Vec2(7, 25, "posB")
velB = Vec2(6, 26, "velB")
uB = Vec2(2, 14, "uB")
vB = Vec2(2, 14, "vB")
svwrite("\n")
dump_queue()
svwrite("module collision_test();\n")
dump_queue()
svwrite("timeunit 10ns;\n")
dump_queue()
svwrite("timeprecision 1ns;\n")
dump_queue()
svwrite("\n")
dump_queue()
widthA.declare()
heightA.declare()
posA.declare()
velA.declare()
uA.declare()
vA.declare()

widthB.declare()
heightB.declare()
posB.declare()
velB.declare()
uB.declare()
vB.declare()
svwrite("    \n")
dump_queue()
svwrite("logic is_collision;\n")
dump_queue()
svwrite("\n")
dump_queue()
svwrite("    collision_detector cd_inst(.*);\n")
dump_queue()
svwrite("    \n")
dump_queue()
svwrite("    initial begin: TEST_VECTORS\n")
dump_queue()
widthA.assign(10)
heightA.assign(10)
uA.assign([1, 0])
vA.assign([0, 1])
posA.assign([7, 7])

widthB.assign(10)
heightB.assign(10)
uB.assign([1, 0])
vB.assign([0, 1])
posB.assign([20, 7])
svwrite("\n")
dump_queue()
for i in range(0, 30):
    svwrite("#16\n")
    j = 19 - i
    posB.x.assign(j)
svwrite("    end\n")
dump_queue()
svwrite("\n")
dump_queue()
svwrite("endmodule\n")
dump_queue()
svpy.writefile.close()